import material/material_ui;

add3DMouseListeners(id : string, object : F3DObject) {
	switch (object : F3DObject) {
		F3DScene(items): {
			F3DScene(fmapi(items, \i, it -> add3DMouseListeners(id + " " + i2s(i), it)));
		}
		default : {
			F3DInteractive(
				object,
				[
					F3DMouseDown(\ -> println("down" + id)),
					F3DMouseDown(\ -> println("up" + id))
				]
			)
		}
	}
}

main() {
	manager = makeMaterialManager([]);

	scene =
		F3DChildren(F3DSceneLoader("images/3d/soccer/soc_field.json"), \c -> add3DMouseListeners("", c));
		// F3DScene(
		// 	const([
		// 		F3DInteractive(
		// 			F3DLoader("images/3d/soccer/Web3D_Field.obj", "images/3d/soccer/Web3D_Field.mtl"),
		// 			[
		// 				F3DMouseDown(\ -> println("down")),
		// 				F3DMouseDown(\ -> println("up"))
		// 			]
		// 		),
		// 		F3DTransformControls(
		// 			F3DInteractive(
		// 				F3DLoader("images/3d/soccer/Web3D_Ball_null.obj", "images/3d/soccer/Web3D_Ball_null.mtl"),
		// 				[
		// 					F3DMouseDown(\ -> println("down ball")),
		// 					F3DMouseDown(\ -> println("up ball"))
		// 				]
		// 			)
		// 		),
		// 		F3DLoader("images/3d/soccer/Web3D_Blue_null.obj", "images/3d/soccer/Web3D_Blue_null.mtl"),
		// 		F3DLoader("images/3d/soccer/Web3D_Red_null.obj", "images/3d/soccer/Web3D_Red_null.mtl"),
		// 		F3DLoader("images/3d/soccer/Web3D_soccer.obj", "images/3d/soccer/Web3D_soccer.mtl"),
		// 	])
		// );
	camera = F3DPerspectiveCamera(const(50.0), const(1.0), const(0.01), const(6000.0));
	light = F3DPointLight(const(white), const(2.0), const(0.0), const(1.0));

	M3DOrbitControls(
		const(WidthHeight(1000.0, 1000.0)),
		scene,
		camera,
		light,
		[
			CameraPosition(make(0.0), make(2000.0), make(0.0)),
			SceneRotation(make(-45.0), make(0.0), make(0.0))
		]
	)
	|> (\f -> MFrame(0.0, 4.0, [MStroke(getPrimaryColor(manager)), StrokeWidth(2.0)], f))
	|> (\f -> MBorder4(4.0, f))
	|> (\f -> mrender(manager, true, f))
}