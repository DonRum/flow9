import sys/system;
import tools/flowc/incremental/fiprogram;
import tools/flowc/tests/incremental/stochastic_mutators;

testCorrectMutation(generated : GenModules, i : int) -> void {
	if (i == 0) {
		println("All tests pass successfully");
		quit(0);
	} else {
		startProcess("flowc1", ["./flowgen/main.flow"], "./", "", \errcode, stdout, stderr -> {
			if (errcode != 0) {
				println("ERROR STDOUT: ");
				println(stdout);
				println("ERROR STDERR: ");
				println(stderr);
				quit(-1);
			} else {
				println("test iteration: " + i2s(i) + " passed successfully");
				mutateModulesCorrectly(generated);
				testCorrectMutation(generated, i - 1);
			}
		});
	}
}

main() {
	println("Stochastic tests of incremental compilation");
	println("");
	
	deleteDirectory("./flowgen");
	
	item_count = s2i(getUrlParameterDef("items", "100"));
	mod_count = s2i(getUrlParameterDef("modules", "100"));
	iterations = s2i(getUrlParameterDef("iterations", "20"));
	
	//m = generateIncrementalTestModule(mod_count);
	//writeModule(m);
	//println("module '" + m.fileinfo.fullpath + "' is written");
	//quit(0);
	
	generated = generateIncrementalTestModules(mod_count);
	iter(generated.modules, \module -> writeModule(^module));

	fcPrintln("correct mutations...");
	testCorrectMutation(generated, iterations);
}
