import tools/flowc/backends/inca/lift_exp;
import text/blueprint;

export {
	// Lift our code to lifted, mutable versions
	liftIncaGlobals(env : IncaEnv) -> string;
}


liftIncaGlobals(env : IncaEnv) -> string {
	blueprint("
		import inca/manager;
		import out/types;

		export {
			makeIncaManager() -> IncaManager;

			%dec%
		}

		%manager%

		%def%
	", [
		"manager", buildIncaManagerCode(env),
		"dec", foldTree(env.globals, "", \name, gl, acc -> acc + (if (acc != "") "\n" else "") + name + "_lifted : IncaValue;"),
		"def", foldTree(env.globals, "", \name, gl, acc -> acc + liftIncaGlobal(env, name, gl) + "\n"),
	]);
}

buildIncaManagerCode(env : IncaEnv) -> string {
	blueprint("
		makeIncaManager() -> IncaManager {
			IncaManager(
				pairs2tree([
					%globals%])
			);
		}
	", [
		"globals", foldTree(env.globals, "", \name, gl : FiGlobalVar, acc -> {
			acc + "Pair(\"" + name + "\", " + liftIncaExp(env, gl.value, 0) + "),\n"
		})
	])
}


liftIncaGlobal(env : IncaEnv, name : string, global : FiGlobalVar) -> string {
	name + "_lifted = " + liftIncaExp(env, global.value, 0) + ";";
}
