import material/material2tropic;
import material/material_dialog;

main () {
	setRendererType("html");
	manager = makeMaterialManager([]);

	posScale = make(zeroPositionScale);
	close : ref DynamicBehaviour<bool> = ref make(false);

	elementClip = ref TEmpty();

	topMostElement =
		TMoveClip(
			TRectangle([MFill(MBlue(200)), FillOpacity(0.5)], TFixed(200., 200.)),
			\el -> elementClip := el
		)
		|> (\t -> MPositionScale(posScale, t))
		|> (\t -> MConstruct([
			makeSubscribe2(manager.manager.zorder, \ord -> {
				next(^close, true);
				close := make(false);
				if (ord > 0)
					deferred(\ ->
						ShowMDialog(
							manager,
							^close,
							[MDialogNonModal(), MDialogNoCenter(), MDialogNoAnimation()],
							MTranslate(fselect(posScale, FLift(\ps -> Point(ps.pos.x - 24., ps.pos.y - 24.))), ^elementClip)
						)
					)
			})
		], t));


	content =
		enumFromTo(1, 100)
		|> (\xs -> map(xs, \x -> {
			ps = make(PositionScale(Point(0.0, 0.0), Point(0.0, 0.0)));
			openPopup = \parent, m2t -> \ -> {
				popup =
					MPopup(
						[[MCols([MTextInput(make(""), [MWidth(320.0)], []), MIconButton("add", nop, [], [])])]],
						ps,
						[/*RMClickOutToClose(),*/]
					);
				RenderMPopup(manager, parent, popup, m2t);
			}
			MCols([
				MText(i2s(x), []),
				MGetFocusGroup(\parent -> MGetMaterial2Tropic(\m2t ->
					MPositionScale(ps, MIconButton("menu", openPopup(parent, m2t), [], []))
				))
			])
		}))
		|> MLines
		|> (\m -> MScroll(m, TFillXY(), []))
		|> (\m -> MGroup2(
			topMostElement,
			m
		));

	mrender(manager, true, content);
}