import text/compression/lzw;

main() {
	sourceStr = "#include lib/text/test_lzw_data.txt";
	// sourceStr = "Test test Test";

	testStr = strRepeat(sourceStr, 60);
	testStrLen = strlen(testStr);
	println("source: " + i2s(testStrLen));

	println("Start lzw_encode...");
	t0 = timestamp();
	compressed = lzw_encode(testStr);
	t1 = timestamp();

	compressedLen = strlen(compressed);
	println("    DOME. compressed: " + i2s(compressedLen) + ", " + d2s(roundTo((t1-t0)/1000.0, 0.1)) + " sec");

	println("Start lzw_decode...");
	t2 = timestamp();
	decompressed = lzw_decode(compressed);
	t3 = timestamp();
	decompressedLen = strlen(decompressed);
	println("    DONE. decompressed: " + i2s(decompressedLen) + ", " + d2s(roundTo((t3-t2)/1000.0, 0.1)) + " sec");

	println(i2s(testStrLen) + " -> " + i2s(compressedLen) + " -> " + i2s(decompressedLen));
	println("RATIO: " + i2s(round(100.0 * i2d(compressedLen) / i2d(testStrLen))) + "%");
	if (testStr == decompressed) {
		println("PASSED");
	} else {
		println("FAILED");
	}
	assertEquals(testStr, decompressed);

	quit(0);
}